/**
 * Migration: 008 - Study Tables
 *
 * Adds study management tables to support research project tracking.
 * Includes STUDY_DIMENSION and STUDY_PATIENT_LOOKUP for patient enrollment.
 */

export const studyTables = {
  name: '008-study-tables',
  description: 'Add study management tables: STUDY_DIMENSION and STUDY_PATIENT_LOOKUP for patient enrollment',
  sql: `
    -- STUDY_DIMENSION - Main study table
    CREATE TABLE IF NOT EXISTS STUDY_DIMENSION (
      STUDY_NUM INTEGER PRIMARY KEY AUTOINCREMENT,
      STUDY_CD TEXT UNIQUE NOT NULL,
      NAME_CHAR TEXT NOT NULL,
      CATEGORY_CHAR TEXT,
      DESCRIPTION_CHAR TEXT,
      STATUS_CD TEXT DEFAULT 'planning',
      PRINCIPAL_INVESTIGATOR TEXT,
      TARGET_PATIENT_COUNT INTEGER,
      FUNDING_CD TEXT,
      START_DATE TEXT,
      END_DATE TEXT,
      STUDY_BLOB TEXT,
      UPDATE_DATE TEXT,
      DOWNLOAD_DATE TEXT,
      IMPORT_DATE TEXT,
      SOURCESYSTEM_CD TEXT,
      UPLOAD_ID INTEGER,
      CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
      UPDATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP
    );

    -- STUDY_PATIENT_LOOKUP - Links studies to enrolled patients
    CREATE TABLE IF NOT EXISTS STUDY_PATIENT_LOOKUP (
      STUDY_PATIENT_ID INTEGER PRIMARY KEY AUTOINCREMENT,
      STUDY_NUM INTEGER NOT NULL,
      PATIENT_NUM INTEGER NOT NULL,
      ENROLLMENT_DATE TEXT,
      WITHDRAWAL_DATE TEXT,
      ENROLLMENT_STATUS_CD TEXT DEFAULT 'active',
      STUDY_PATIENT_BLOB TEXT,
      UPDATE_DATE TEXT,
      DOWNLOAD_DATE TEXT,
      IMPORT_DATE TEXT,
      UPLOAD_ID INTEGER,
      CREATED_AT DATETIME DEFAULT CURRENT_TIMESTAMP,
      FOREIGN KEY (STUDY_NUM) REFERENCES STUDY_DIMENSION(STUDY_NUM) ON DELETE CASCADE,
      FOREIGN KEY (PATIENT_NUM) REFERENCES PATIENT_DIMENSION(PATIENT_NUM) ON DELETE CASCADE,
      UNIQUE(STUDY_NUM, PATIENT_NUM)
    );

    -- Create indexes for performance
    CREATE INDEX IF NOT EXISTS idx_study_study_cd ON STUDY_DIMENSION(STUDY_CD);
    CREATE INDEX IF NOT EXISTS idx_study_category ON STUDY_DIMENSION(CATEGORY_CHAR);
    CREATE INDEX IF NOT EXISTS idx_study_status ON STUDY_DIMENSION(STATUS_CD);
    CREATE INDEX IF NOT EXISTS idx_study_principal_investigator ON STUDY_DIMENSION(PRINCIPAL_INVESTIGATOR);
    CREATE INDEX IF NOT EXISTS idx_study_patient_study_num ON STUDY_PATIENT_LOOKUP(STUDY_NUM);
    CREATE INDEX IF NOT EXISTS idx_study_patient_patient_num ON STUDY_PATIENT_LOOKUP(PATIENT_NUM);
    CREATE INDEX IF NOT EXISTS idx_study_patient_status ON STUDY_PATIENT_LOOKUP(ENROLLMENT_STATUS_CD);
  `,
};
