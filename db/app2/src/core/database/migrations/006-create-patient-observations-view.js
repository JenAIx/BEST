/**
 * Migration: Create Patient Observations View
 * Creates the patient_observations view with resolved concept names
 * This view joins OBSERVATION_FACT with related dimensions to provide human-readable values
 */

export const createPatientObservationsView = {
  name: '006-create-patient-observations-view',
  description: 'Create patient_observations view with resolved concept names for CONCEPT_CD, TVAL_CHAR, and UNIT_CD',
  execute: async (connection) => {
    const statements = [
      // Drop view if it exists (for idempotency)
      'DROP VIEW IF EXISTS patient_observations',

      // Create the patient_observations view with concept resolution
      `CREATE VIEW patient_observations AS
SELECT
    PATIENT_DIMENSION.PATIENT_CD as PATIENT_CD,
    PATIENT_DIMENSION.PATIENT_NUM as PATIENT_NUM,
    VISIT_DIMENSION.ENCOUNTER_NUM as ENCOUNTER_NUM,
    OBSERVATION_FACT.START_DATE as START_DATE,
    OBSERVATION_FACT.OBSERVATION_ID as OBSERVATION_ID,
    OBSERVATION_FACT.CATEGORY_CHAR as CATEGORY_CHAR,
    OBSERVATION_FACT.CONCEPT_CD as CONCEPT_CD,
    CD1.NAME_CHAR as CONCEPT_NAME_CHAR,
    OBSERVATION_FACT.VALTYPE_CD as VALTYPE_CD,
    OBSERVATION_FACT.NVAL_NUM as NVAL_NUM,
    OBSERVATION_FACT.UNIT_CD as UNIT_CD,
    CD3.NAME_CHAR as UNIT_RESOLVED,
    OBSERVATION_FACT.TVAL_CHAR as TVAL_CHAR,
    CD2.NAME_CHAR as TVAL_RESOLVED,
    OBSERVATION_FACT.OBSERVATION_BLOB as OBSERVATION_BLOB,
    OBSERVATION_FACT.LOCATION_CD as LOCATION_CD,
    OBSERVATION_FACT.PROVIDER_ID as PROVIDER_ID,
    OBSERVATION_FACT.END_DATE as END_DATE,
    OBSERVATION_FACT.INSTANCE_NUM as INSTANCE_NUM,
    OBSERVATION_FACT.VALUEFLAG_CD as VALUEFLAG_CD,
    OBSERVATION_FACT.QUANTITY_NUM as QUANTITY_NUM,
    OBSERVATION_FACT.CONFIDENCE_NUM as CONFIDENCE_NUM,
    OBSERVATION_FACT.UPDATE_DATE as UPDATE_DATE,
    OBSERVATION_FACT.DOWNLOAD_DATE as DOWNLOAD_DATE,
    OBSERVATION_FACT.IMPORT_DATE as IMPORT_DATE,
    OBSERVATION_FACT.SOURCESYSTEM_CD as SOURCESYSTEM_CD,
    OBSERVATION_FACT.UPLOAD_ID as UPLOAD_ID
FROM
    OBSERVATION_FACT
INNER JOIN PATIENT_DIMENSION ON
    PATIENT_DIMENSION.PATIENT_NUM = OBSERVATION_FACT.PATIENT_NUM
INNER JOIN VISIT_DIMENSION ON
    VISIT_DIMENSION.ENCOUNTER_NUM = OBSERVATION_FACT.ENCOUNTER_NUM
LEFT JOIN CONCEPT_DIMENSION AS CD1 ON
    CD1.CONCEPT_CD = OBSERVATION_FACT.CONCEPT_CD
LEFT JOIN CONCEPT_DIMENSION AS CD2 ON
    CD2.CONCEPT_CD = OBSERVATION_FACT.TVAL_CHAR
LEFT JOIN CONCEPT_DIMENSION AS CD3 ON
    CD3.CONCEPT_CD = OBSERVATION_FACT.UNIT_CD
ORDER BY PATIENT_CD, ENCOUNTER_NUM, START_DATE, CONCEPT_NAME_CHAR`,
    ]

    // Execute each statement individually
    for (const statement of statements) {
      await connection.executeCommand(statement)
    }
  },
}
